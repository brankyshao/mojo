 ~~ Licensed to the Apache Software Foundation (ASF) under one
 ~~ or more contributor license agreements.  See the NOTICE file
 ~~ distributed with this work for additional information
 ~~ regarding copyright ownership.  The ASF licenses this file
 ~~ to you under the Apache License, Version 2.0 (the
 ~~ "License"); you may not use this file except in compliance
 ~~ with the License.  You may obtain a copy of the License at
 ~~
 ~~   http://www.apache.org/licenses/LICENSE-2.0
 ~~
 ~~ Unless required by applicable law or agreed to in writing,
 ~~ software distributed under the License is distributed on an
 ~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~~ KIND, either express or implied.  See the License for the
 ~~ specific language governing permissions and limitations
 ~~ under the License.

 ------
 Introduction
 ------
 Stephen Connolly
 ------
 2009-08-13
 ------


Virtualization Maven Plugin

  The Virtualization Plugin is used when you want to control virtual computers running on a virtualization platform
  from within a project's build.

* Goals Overview

  The Virtualization Plugin has the following goals.

  * {{{list-computers-mojo.html}virtualization:list-computers}} displays a list of all the computers available at a
    specified datacenter URI.

  * {{{start-computer-mojo.html}virtualization:start-computer}} starts a specified virtual computer.

  * {{{pause-computer-mojo.html}virtualization:pause-computer}} pauses a specified virtual computer (a virtual computer
    is paused if it is no longer executing, but it has not been unloaded from memory).

  * {{{start-computer-mojo.html}virtualization:suspend-computer}} suspends a specified virtual computer (a virtual
    computer is suspended if it is no longer executing and the memory state has been written to disk).

  * {{{stop-computer-mojo.html}virtualization:stop-computer}} powers off a specified virtual computer.

* Usage

  General instructions on how to use the Virtualization Plugin can be found on the {{{usage.html}usage page}}.
  Additional information may be available at the {{{https://vcc.dev.java.net/}Virtual Computer Control project}}'s site.
  Some more specific use cases are described in the examples given below. Last but not least, users occasionally
  contribute additional examples, tips or errata to the
  {{{http://docs.codehaus.org/display/MAVENUSER/Virtualization+Plugin}plugin's wiki page}}.

  In case you still have questions regarding the plugin's usage, please have a look at the {{{faq.html}FAQ}} and feel
  free to contact the {{{mail-lists.html}user mailing list}}. The posts to the mailing list are archived and could
  already contain the answer to your question as part of an older thread. Hence, it is also worth browsing/searching
  the {{{mail-lists.html}mail archive}}.

  If you feel like the plugin is missing a feature or has a defect, you can fill a feature request or bug report in our
  {{{issue-tracking.html}issue tracker}}. When creating a new issue, please provide a comprehensive description of your
  concern. Especially for fixing bugs it is crucial that the developers can reproduce your problem. For this reason,
  entire debug logs, POMs or most preferably little demo projects attached to the issue are very much appreciated.
  Of course, patches are welcome, too. Contributors can check out the project from our
  {{{source-repository.html}source repository}} and will find supplementary information in the
  {{{http://maven.apache.org/guides/development/guide-helping.html}guide to helping with Maven}}.

* Examples

  To provide you with better understanding of some usages of the Plugin Name,
  you can take a look into the following examples:

  * {{{examples/integration-testing.html}Using for integration testing}}.

